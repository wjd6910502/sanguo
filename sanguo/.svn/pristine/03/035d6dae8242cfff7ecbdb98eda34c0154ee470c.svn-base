--注意一下这里面所有的函数在使用的时候，都要判断一下返回值。

function LIMIT_TestUseLimit(role, id, count)
	local ed = DataPool_Find("elementdata")
	local template_common = ed:FindBy("limit_id", id)
	if template_common == nil then
		return false
	end
	
	local common_use_limit = role._status._common_use_limit
	local inv = common_use_limit:Find(id)
	if inv~=nil then
		local ed = DataPool_Find("elementdata")
		local template_common = ed:FindBy("limit_id", id)
		if template_common == nil then
			return false
		end
		if template_common.upperlimit >= inv._count+count then
			return true
		end
	else
		if template_common.upperlimit >= count then
			return true
		end
	end
end

function LIMIT_AddUseLimit(role, id, count)
	local common_use_limit = role._status._common_use_limit
	local inv = common_use_limit:Find(id)
	if inv~=nil then
		inv._count = inv._count + count
	else
		local ed = DataPool_Find("elementdata")
		local template_common = ed:FindBy("limit_id", id)
		if template_common == nil then
			return false
		end
		local limit = CACHE.CommonUseLimit:new()
		limit._tid = id
		limit._count = count
		limit._type = template_common.limitmode
		common_use_limit:Insert(id, limit)
	end
	return true
end

--在玩家买次数的时候，需要用这个判断一下，要是系统直接充值次数的时候就不需要了
function LIMIT_TestResetUseLimit(role, id)
	local common_use_limit = role._status._common_use_limit
	local ed = DataPool_Find("elementdata")
	local template_common = ed:FindBy("limit_id", id)
	if template_common == nil then
		return false
	end
	
	local inv = common_use_limit:Find(id)
	if inv~=nil then
		if template_common.upperlimit == inv._count then
			inv._count = 0
			return true
		else
			return false
		end
	else
		return false
	end
end

function LIMIT_ResetUseLimit(role, id)
	local common_use_limit = role._status._common_use_limit
	local inv = common_use_limit:Find(id)
	if inv~=nil then
		inv._count = 0
		return true
	else
		return false
	end
end
