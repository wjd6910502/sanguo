
#ifndef __GNET_SYNCNETIMERE_HPP
#define __GNET_SYNCNETIMERE_HPP

#include "localdefs.h"
#include "callid.hxx"
#include "state.hxx"

#include "servertimer.h"
namespace GNET
{

class SyncNetimeRe : public GNET::Protocol
{
	#include "syncnetimere"

	void Process(Manager *manager, Manager::Session::ID sid)
	{
	//	fprintf(stderr,"-----------------Sync NTP------ orignatetime = %.*s \n", orignatetime.size(),(char*)orignatetime.begin() );
		timeval ref_time;
		gettimeofday(&ref_time, NULL);	
	
		int64_t referencetime = ref_time.tv_sec*1000000 + ref_time.tv_usec;		
		//网络延时
		int64_t roundtrip_delay =  (referencetime - orignatetime)  - (transmitime - receivetime);
		//客户端与服务器时间差
		int64_t difftimes2c = ((receivetime - orignatetime) + ( transmitime - referencetime))/2;	
		//计算网络延时和时间差
		ServerTimer::GetInstance()->EstimateNTP(roundtrip_delay,difftimes2c);

	}
};

};

#endif
