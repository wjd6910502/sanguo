function OnMessage_RoleUpdatePveArenaMisc(player, role, arg, others)
	player:Log("OnMessage_RoleUpdatePveArenaMisc, "..DumpTable(arg).." "..DumpTable(others))

	local pve_arena = others.pvearena._data._pve_arena_data_map_data
	others.pvearena._data._all_num = others.pvearena._data._all_num + 1
	local insert_flag = 1
	local minimum = 0
	if pve_arena:Size() == 0 then
		--第一个桶就弄成以第一个玩家的分数作为基准，前后各25的范围
		local data = CACHE.PveArenaData()
		data._begin_score = role._roledata._pve_arena_info._score - 25
		data._end_score = role._roledata._pve_arena_info._score + 25
		data._cur_num = 1

		local role_pve_arena_list = CACHE.RolePveArenaDataMapData()
		local role_pve_arena_data = CACHE.RolePveArenaData()

		local heroid_it = role._roledata._pve_arena_info._defence_hero_info:SeekToBegin()
		local heroid = heroid_it:GetValue()
		while heroid ~= nil do
			local hero_info = role._roledata._hero_hall._heros:Find(heroid._value)
			if hero_info ~= nil then
				local insert_hero = CACHE.PveArenaHeroInfo()
				
				insert_hero._heroid = heroid._value
				insert_hero._level = hero_info._level
				insert_hero._star = hero_info._star
				insert_hero._grade = hero_info._order
				
				local skills = hero_info._skill
				local sit = skills:SeekToBegin()
				local s = sit:GetValue()
				while s ~= nil do
					local h3_skill = CACHE.HeroSkill()
					h3_skill._skill_id = s._skill_id
					h3_skill._skill_level = s._skill_level
					insert_hero._skill:PushBack(h3_skill)
					
					sit:Next()
					s = sit:GetValue()
				end
		
				local common_skills = hero_info._common_skill
				local com_it = common_skills:SeekToBegin()
				local com = com_it:GetValue()
				while com ~= nil do
					local h3_skill = CACHE.HeroSkill()
					h3_skill._skill_id = com._skill_id
					h3_skill._skill_level = com._skill_level
					insert_hero._common_skill:PushBack(h3_skill)
					
					com_it:Next()
					com = com_it:GetValue()
				end
		
				local select_skills = hero_info._select_skill
				local select_skill_it = select_skills:SeekToBegin()
				local select_skill = select_skill_it:GetValue()
				while select_skill ~= nil do
					local h3_skill = CACHE.Int()
					h3_skill._value = select_skill._value
					insert_hero._select_skill:PushBack(h3_skill)

					select_skill_it:Next()
					select_skill = select_skill_it:GetValue()
				end
						
				role_pve_arena_data._hero_info:PushBack(insert_hero)
			end
			heroid_it:Next()
			heroid = heroid_it:GetValue()
		end
	
		role_pve_arena_data._role_id = role._roledata._base._id
		role_pve_arena_data._name = role._roledata._base._name
		role_pve_arena_data._level = role._roledata._status._level
		role_pve_arena_data._mafia_name = role._roledata._mafia._name

		role_pve_arena_list._list_data:PushBack(role_pve_arena_data)
		role_pve_arena_list._score = role._roledata._pve_arena_info._score
		data._pve_arena_data_map:Insert(role._roledata._pve_arena_info._score, role_pve_arena_list)
		
		pve_arena:Insert(data._begin_score, data)
		insert_flag = 0
	else
		local pve_arena_it = pve_arena:SeekToBegin()
		local pve_arena_info = pve_arena_it:GetValue()
		while pve_arena_info ~= nil do
			local role_score = role._roledata._pve_arena_info._score
			if role_score < pve_arena_info._begin_score and role_score > minimum then
				--说明这个分数段里面还是没有人的
				local data = CACHE.PveArenaData()
				data._begin_score = minimum
				data._end_score = pve_arena_info._begin_score - 1
				data._cur_num = 1

				local role_pve_arena_list = CACHE.RolePveArenaDataMapData()
				local role_pve_arena_data = CACHE.RolePveArenaData()

				local heroid_it = role._roledata._pve_arena_info._defence_hero_info:SeekToBegin()
				local heroid = heroid_it:GetValue()
				while heroid ~= nil do
					local hero_info = role._roledata._hero_hall._heros:Find(heroid._value)
					if hero_info ~= nil then
						local insert_hero = CACHE.PveArenaHeroInfo()
						
						insert_hero._heroid = heroid._value
						insert_hero._level = hero_info._level
						insert_hero._star = hero_info._star
						insert_hero._grade = hero_info._order
						
						local skills = hero_info._skill
						local sit = skills:SeekToBegin()
						local s = sit:GetValue()
						while s ~= nil do
							local h3_skill = CACHE.HeroSkill()
							h3_skill._skill_id = s._skill_id
							h3_skill._skill_level = s._skill_level
							insert_hero._skill:PushBack(h3_skill)
							
							sit:Next()
							s = sit:GetValue()
						end
				
						local common_skills = hero_info._common_skill
						local com_it = common_skills:SeekToBegin()
						local com = com_it:GetValue()
						while com ~= nil do
							local h3_skill = CACHE.HeroSkill()
							h3_skill._skill_id = com._skill_id
							h3_skill._skill_level = com._skill_level
							insert_hero._skill:PushBack(h3_skill)
							
							com_it:Next()
							com = com_it:GetValue()
						end
				
						local select_skills = hero_info._select_skill
						local select_skill_it = select_skills:SeekToBegin()
						local select_skill = select_skill_it:GetValue()
						while select_skill ~= nil do
							local h3_skill = CACHE.Int()
							h3_skill._value = select_skill._value
							insert_hero._select_skill:PushBack(h3_skill)

							select_skill_it:Next()
							select_skill = select_skill_it:GetValue()
						end
								
						role_pve_arena_data._hero_info:PushBack(insert_hero)
					end
					heroid_it:Next()
					heroid = heroid_it:GetValue()
				end
	
				role_pve_arena_data._role_id = role._roledata._base._id
				role_pve_arena_data._name = role._roledata._base._name
				role_pve_arena_data._level = role._roledata._status._level
				role_pve_arena_data._mafia_name = role._roledata._mafia._name

				role_pve_arena_list._list_data:PushBack(role_pve_arena_data)
				role_pve_arena_list._score = role._roledata._pve_arena_info._score
				data._pve_arena_data_map:Insert(role._roledata._pve_arena_info._score, role_pve_arena_list)
				
				pve_arena:Insert(data._begin_score, data)
				insert_flag = 0
				break
			elseif role_score >= pve_arena_info._begin_score and role_score <= pve_arena_info._end_score then
				pve_arena_info._cur_num = pve_arena_info._cur_num + 1
				local find_info = pve_arena_info._pve_arena_data_map:Find(role_score)
				if find_info == nil then
					local role_pve_arena_list = CACHE.RolePveArenaDataMapData()
					local role_pve_arena_data = CACHE.RolePveArenaData()

					local heroid_it = role._roledata._pve_arena_info._defence_hero_info:SeekToBegin()
					local heroid = heroid_it:GetValue()
					while heroid ~= nil do
						local hero_info = role._roledata._hero_hall._heros:Find(heroid._value)
						if hero_info ~= nil then
							local insert_hero = CACHE.PveArenaHeroInfo()
							
							insert_hero._heroid = heroid._value
							insert_hero._level = hero_info._level
							insert_hero._star = hero_info._star
							insert_hero._grade = hero_info._order
							
							local skills = hero_info._skill
							local sit = skills:SeekToBegin()
							local s = sit:GetValue()
							while s ~= nil do
								local h3_skill = CACHE.HeroSkill()
								h3_skill._skill_id = s._skill_id
								h3_skill._skill_level = s._skill_level
								insert_hero._skill:PushBack(h3_skill)
								
								sit:Next()
								s = sit:GetValue()
							end
					
							local common_skills = hero_info._common_skill
							local com_it = common_skills:SeekToBegin()
							local com = com_it:GetValue()
							while com ~= nil do
								local h3_skill = CACHE.HeroSkill()
								h3_skill._skill_id = com._skill_id
								h3_skill._skill_level = com._skill_level
								insert_hero._skill:PushBack(h3_skill)
								
								com_it:Next()
								com = com_it:GetValue()
							end
					
							local select_skills = hero_info._select_skill
							local select_skill_it = select_skills:SeekToBegin()
							local select_skill = select_skill_it:GetValue()
							while select_skill ~= nil do
								local h3_skill = CACHE.Int()
								h3_skill._value = select_skill._value
								insert_hero._select_skill:PushBack(h3_skill)

								select_skill_it:Next()
								select_skill = select_skill_it:GetValue()
							end
									
							role_pve_arena_data._hero_info:PushBack(insert_hero)
						end
						heroid_it:Next()
						heroid = heroid_it:GetValue()
					end

					role_pve_arena_data._role_id = role._roledata._base._id
					role_pve_arena_data._name = role._roledata._base._name
					role_pve_arena_data._level = role._roledata._status._level
					role_pve_arena_data._mafia_name = role._roledata._mafia._name

					role_pve_arena_list._list_data:PushBack(role_pve_arena_data)
					role_pve_arena_list._score = role._roledata._pve_arena_info._score
					pve_arena_info._pve_arena_data_map:Insert(role._roledata._pve_arena_info._score, role_pve_arena_list)
					insert_flag = 0
					break
				else
					local role_pve_arena_data = CACHE.RolePveArenaData()

					local heroid_it = role._roledata._pve_arena_info._defence_hero_info:SeekToBegin()
					local heroid = heroid_it:GetValue()
					while heroid ~= nil do
						local hero_info = role._roledata._hero_hall._heros:Find(heroid._value)
						if hero_info ~= nil then
							local insert_hero = CACHE.PveArenaHeroInfo()
							
							insert_hero._heroid = heroid._value
							insert_hero._level = hero_info._level
							insert_hero._star = hero_info._star
							insert_hero._grade = hero_info._order
							
							local skills = hero_info._skill
							local sit = skills:SeekToBegin()
							local s = sit:GetValue()
							while s ~= nil do
								local h3_skill = CACHE.HeroSkill()
								h3_skill._skill_id = s._skill_id
								h3_skill._skill_level = s._skill_level
								insert_hero._skill:PushBack(h3_skill)
								
								sit:Next()
								s = sit:GetValue()
							end
					
							local common_skills = hero_info._common_skill
							local com_it = common_skills:SeekToBegin()
							local com = com_it:GetValue()
							while com ~= nil do
								local h3_skill = CACHE.HeroSkill()
								h3_skill._skill_id = com._skill_id
								h3_skill._skill_level = com._skill_level
								insert_hero._common_skill:PushBack(h3_skill)
								
								com_it:Next()
								com = com_it:GetValue()
							end
					
							local select_skills = hero_info._select_skill
							local select_skill_it = select_skills:SeekToBegin()
							local select_skill = select_skill_it:GetValue()
							while select_skill ~= nil do
								local h3_skill = CACHE.Int()
								h3_skill._value = select_skill._value
								insert_hero._select_skill:PushBack(h3_skill)

								select_skill_it:Next()
								select_skill = select_skill_it:GetValue()
							end
									
							role_pve_arena_data._hero_info:PushBack(insert_hero)
						end
						heroid_it:Next()
						heroid = heroid_it:GetValue()
					end
					
					role_pve_arena_data._role_id = role._roledata._base._id
					role_pve_arena_data._name = role._roledata._base._name
					role_pve_arena_data._level = role._roledata._status._level
					role_pve_arena_data._mafia_name = role._roledata._mafia._name
					find_info._list_data:PushBack(role_pve_arena_data)
					insert_flag = 0
					break
				end
			end
			minimum = pve_arena_info._end_score
			pve_arena_it:Next()
			pve_arena_info = pve_arena_it:GetValue()
		end
	end

	if insert_flag == 1 then
		--已经不再那个范围里面了，所以就新的建立一个
		local data = CACHE.PveArenaData()
		data._begin_score = role._roledata._pve_arena_info._score - 25
		if minimum >= data._begin_score then
			data._begin_score = minimum + 1
		end
		data._end_score = role._roledata._pve_arena_info._score + 25
		data._cur_num = 1

		local role_pve_arena_list = CACHE.RolePveArenaDataMapData()
		local role_pve_arena_data = CACHE.RolePveArenaData()

		local heroid_it = role._roledata._pve_arena_info._defence_hero_info:SeekToBegin()
		local heroid = heroid_it:GetValue()
		while heroid ~= nil do
			local hero_info = role._roledata._hero_hall._heros:Find(heroid._value)
			if hero_info ~= nil then
				local insert_hero = CACHE.PveArenaHeroInfo()
				
				insert_hero._heroid = heroid._value
				insert_hero._level = hero_info._level
				insert_hero._star = hero_info._star
				insert_hero._grade = hero_info._order
				
				local skills = hero_info._skill
				local sit = skills:SeekToBegin()
				local s = sit:GetValue()
				while s ~= nil do
					local h3_skill = CACHE.HeroSkill()
					h3_skill._skill_id = s._skill_id
					h3_skill._skill_level = s._skill_level
					insert_hero._skill:PushBack(h3_skill)
					
					sit:Next()
					s = sit:GetValue()
				end
		
				local common_skills = hero_info._common_skill
				local com_it = common_skills:SeekToBegin()
				local com = com_it:GetValue()
				while com ~= nil do
					local h3_skill = CACHE.HeroSkill()
					h3_skill._skill_id = com._skill_id
					h3_skill._skill_level = com._skill_level
					insert_hero._skill:PushBack(h3_skill)
					
					com_it:Next()
					com = com_it:GetValue()
				end
		
				local select_skills = hero_info._select_skill
				local select_skill_it = select_skills:SeekToBegin()
				local select_skill = select_skill_it:GetValue()
				while select_skill ~= nil do
					local h3_skill = CACHE.Int()
					h3_skill._value = select_skill._value
					insert_hero._select_skill:PushBack(h3_skill)

					select_skill_it:Next()
					select_skill = select_skill_it:GetValue()
				end
						
				role_pve_arena_data._hero_info:PushBack(insert_hero)
			end
			heroid_it:Next()
			heroid = heroid_it:GetValue()
		end
	
		role_pve_arena_data._role_id = role._roledata._base._id
		role_pve_arena_data._name = role._roledata._base._name
		role_pve_arena_data._level = role._roledata._status._level
		role_pve_arena_data._mafia_name = role._roledata._mafia._name

		role_pve_arena_list._list_data:PushBack(role_pve_arena_data)
		role_pve_arena_list._score = role._roledata._pve_arena_info._score
		data._pve_arena_data_map:Insert(role._roledata._pve_arena_info._score, role_pve_arena_list)
		
		pve_arena:Insert(data._begin_score, data)
	end
end
