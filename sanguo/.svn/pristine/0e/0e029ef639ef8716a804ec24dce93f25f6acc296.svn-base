function OnCommand_PublicChat(player, role, arg, others)
	player:Log("OnCommand_PublicChat, "..DumpTable(arg))
	
	--内容长度有限制
	if string.len(arg.text_content)>200 then return end

	if arg.channel == 3 and role._roledata._mafia._id:ToStr() == "0" then
		return
	end

	--如果type为1 语音翻译 第二个参数为0 代表公聊
	if arg.typ == 1 then
		local channel = arg.typ*100 + arg.channel 	
		--PrintSpeech(arg.speech_content)
		role:SendSpeechToSTT(0,0,channel,arg.speech_content)
		return
	end

	----通知目标
	local msg = NewMessage("PublicChatnew")
	msg.src = ROLE_MakeRoleBrief(role)
	msg.text_content = arg.text_content
	msg.channel = arg.channel
	if arg.speech_content ~= nil then
		msg.speech_content = arg.speech_content 
	end
	
	msg.time = API_GetTime()
	if arg.channel == 2 then
		player:SendMessageToAllRole(SerializeMessage(msg))
	elseif arg.channel == 3 then
		if role._roledata._mafia._id:ToStr() ~= "0" or role._roledata._mafia._name ~= "" then
			local mafia_msg = NewMessage("MafiaChat")
			mafia_msg.src = msg.src
			mafia_msg.text_content = msg.text_content
			mafia_msg.channel = msg.channel
			mafia_msg.speech_content = msg.speech_content
			mafia_msg.time = msg.time
			mafia_msg.chat_typ = msg.chat_typ
			API_SendMessage(role._roledata._mafia._id, SerializeMessage(mafia_msg), CACHE.Int64List(), CACHE.Int64List(), CACHE.IntList())
		end
	end
end

--Convert Bytes to hex string
function PrintSpeech(bytes)
	print("*********************************************\n")
	local wwwww = ''
	print("bytes len = "..string.len(bytes))
	for i = 1, string.len(bytes) do
		local charcode = tonumber(string.byte(bytes,i,i));
		local hexstr = string.format("%02X",charcode);
		wwwww = wwwww..hexstr
	end
	print(wwwww);
	print("*********************************************\n")
end

