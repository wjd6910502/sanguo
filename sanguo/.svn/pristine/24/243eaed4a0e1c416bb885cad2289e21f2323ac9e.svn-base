
--结构件
g_main_thread_index = 0
g_main_thread = nil

--全局状态变量
--登录相关
g_got_GetVersion_Re = false
g_got_GetRoleInfo_Re = false
g_role_id = ""
--好友相关
g_got_ListFriends_Re = false
g_friends = {}
g_requests = {}
g_requesting = {}
g_others = {}
g_others_mafia_id = {}
--副本相关
g_got_EnterInstance_Re = false
g_got_CompleteInstance_Re = false
--mafia
g_got_MafiaGet_Re = false
g_mafia_id = ""
g_mafia_inviting = {}
g_mafia_invites = {} -- src_role_id=>mafia_id
--pvp
g_in_pvp = false
g_pvp_invites = {}
g_pvp_id = 0
g_opponent_id = 0
g_got_PVPBegin = false
g_pvp_fight_start_time = 0
--g_op_tick_max = 0
g_received_client_tick_max = 0
g_player1_hash = 5381
g_player2_hash = 5381




--结构件
function CreateThread(index, policy)
	g_main_thread_index = index 
	g_main_thread = coroutine.create(_G[policy])
end

function Heartbeat()
	if g_main_thread~=nil then coroutine.resume(g_main_thread) end
end

function Nop()
	coroutine.yield()
	return true
end

function Sleep(nsecs)
	local b = API_GetTime2()
	while Nop()
	do
		local now = API_GetTime2()
		if now-b>=nsecs*1000 then break end
	end
end

function Init()
	math.randomseed(API_GetTime2()+g_main_thread_index)
end

function Login()
	--登录
	--获取版本信息
	API_SendGameProtocol(SerializeCommand(NewCommand("GetVersion")))
	while not g_got_GetVersion_Re do Nop() end
	--获取角色信息
	API_SendGameProtocol(SerializeCommand(NewCommand("GetRoleInfo")))
	while not g_got_GetRoleInfo_Re do Nop() end
	--没有角色则建立角色
	if g_role_id=="" or g_role_id=="0" then
		local cmd = NewCommand("CreateRole")
		cmd.name = "Player"..g_main_thread_index
		cmd.photo = 1
		API_SendGameProtocol(SerializeCommand(cmd))
		--等待创建角色结果
		while g_role_id=="" or g_role_id=="0" do Nop() end
	end
end

--自由测试入口
function Test()
	Init()
	Login()

	----好友测试
	----获取friends列表
	--API_SendGameProtocol(SerializeCommand(NewCommand("ListFriends")))
	--while not g_got_ListFriends_Re do Nop() end
	--主循环
	local loop = 0
	while Nop()
	do
		loop = loop+1

		----大世界喊话，让别人知道自己
		--local cmd = NewCommand("PublicChat")
		--cmd.content = "hello, all! "..loop
		--API_SendGameProtocol(SerializeCommand(cmd))

		--升1级
		local cmd2 = NewCommand("DebugCommand")
		cmd2.typ = "levelup"
		API_SendGameProtocol(SerializeCommand(cmd2))

		----看到有人喊话，如果不是好友则申请加好友
		--for k,v in pairs(g_others)
		--do
		--	if k~=g_role_id and g_friends[k]==nil and g_requests[k]==nil and g_requesting[k]==nil then
		--		local cmd = NewCommand("FriendRequest")
		--		cmd.dest_id = k
		--		API_SendGameProtocol(SerializeCommand(cmd), "R"..cmd.dest_id)
		--		g_requesting[k] = true
		--	end
		--end
		----处理已收到的好友申请
		--for k,v in pairs(g_requests)
		--do
		--	if v~=nil then
		--		if k~=g_role_id and g_friends[k]==nil then
		--			local cmd = NewCommand("FriendReply")
		--			cmd.src_id = k
		--			cmd.accept = true
		--			API_SendGameProtocol(SerializeCommand(cmd), "R"..cmd.src_id)
		--		end
		--		g_requests[k] = nil
		--	end
		--end
	end
end

--测试副本入口
function TestInstance()
	Init()
	Login()

	--不断进出副本
	--主循环
	loop = 0
	while Nop()
	do
		loop = loop+1
		--进副本
		g_got_EnterInstance_Re = false
		local cmd = NewCommand("EnterInstance")
		cmd.inst_tid = loop
		API_SendGameProtocol(SerializeCommand(cmd))
		while not g_got_EnterInstance_Re do Nop() end
		--完成副本
		g_got_CompleteInstance_Re = false
		local cmd = NewCommand("CompleteInstance")
		cmd.inst_tid = loop
		cmd.score = 100
		API_SendGameProtocol(SerializeCommand(cmd))
		while not g_got_CompleteInstance_Re do Nop() end
	end
end

--测试帮派(帮主)
function TestMafiaAsBoss()
	Init()
	Login()

	--没有帮派则建立帮派
	if g_mafia_id=="" or g_mafia_id=="0" then
		local cmd = NewCommand("MafiaCreate")
		cmd.name = "Mafia"..g_main_thread_index
		cmd.flag = 1
		API_SendGameProtocol(SerializeCommand(cmd))
		--等待创建角色结果
		while g_mafia_id=="" or g_mafia_id=="0" do Nop() end
	else
		--获取帮派信息
		API_SendGameProtocol(SerializeCommand(NewCommand("MafiaGet")), "M"..g_mafia_id)
		while not g_got_MafiaGet_Re do Nop() end
	end

	--主循环
	local loop = 0
	while Nop()
	do
		--看到有人喊话，如果没有帮派则邀请
		for k,v in pairs(g_others_mafia_id)
		do
			if v=="0" and g_mafia_inviting[k]==nil then
				local cmd = NewCommand("MafiaInvite")
				cmd.dest_id = k
				API_SendGameProtocol(SerializeCommand(cmd), "R"..cmd.dest_id, "M"..g_mafia_id)
				g_mafia_inviting[k] = true
			end
		end
	end
end

--测试帮派(帮众)
function TestMafia()
	Init()
	Login()

	--主循环
	local loop = 0
	while Nop()
	do
		loop = loop+1

		if g_mafia_id=="" or g_mafia_id=="0" then
			--大世界喊话，让别人知道自己
			local cmd = NewCommand("PublicChat")
			cmd.content = "hello, all, I'm Player"..g_main_thread_index.."! "..loop
			API_SendGameProtocol(SerializeCommand(cmd))

			--处理已收到的帮派申请
			for k,v in pairs(g_mafia_invites)
			do
				local cmd = NewCommand("MafiaReply")
				cmd.src_id = k
				cmd.accept = true
				API_SendGameProtocol(SerializeCommand(cmd), "R"..cmd.src_id, "M"..v)
				g_mafia_invites[k] = nil
			end
		end
	end
end

--测试服务器响应速度
function TestPing()
	Init()
	Login()

	--主循环
	loop = 0
	while Nop()
	do
		loop = loop+1
		--send Ping
		local cmd2 = NewCommand("Ping")
		cmd2.client_send_time = API_GetTime2();
		API_SendGameProtocol(SerializeCommand(cmd2))

		local cmd3 = NewCommand("UDPPing")
		cmd3.client_send_time = API_GetTime2();
		API_SendUDPGameProtocol(SerializeCommand(cmd3))
	end
end

--给服务器和网络制造大量压力
function TestPublicChat()
	Init()
	Login()

	--主循环
	local loop = 0
	while Nop()
	do
		loop = loop+1

		--大世界喊话，让别人知道自己
		local cmd = NewCommand("PublicChat")
		cmd.content = "hello, all, I'm Player"..g_main_thread_index.."! "..loop
		API_SendGameProtocol(SerializeCommand(cmd))
	end
end

--测试调试命令
function TestDebugCommand()
	Init()
	Login()

	--主循环
	loop = 0
	while Nop()
	do
		loop = loop+1

		local cmd2 = NewCommand("DebugCommand")
		cmd2.typ = "TestMessage4"
		API_SendGameProtocol(SerializeCommand(cmd2))
	end
end

--测试PVP
function TestPVP()
	Init()
	Login()

	--主循环
	while Nop()
	do
		g_in_pvp = false
		g_pvp_invites = {}
		g_pvp_id = 0
		g_opponent_id = 0
		g_got_PVPBegin = false
		g_pvp_fight_start_time = 0
		g_received_client_tick_max = 0
		g_player1_hash = 5381
		g_player2_hash = 5381

		while not g_in_pvp
		do
			--大世界喊话，让别人知道自己
			local cmd = NewCommand("PublicChat")
			cmd.content = "hello, all, I'm Player"..g_main_thread_index.."!"
			API_SendGameProtocol(SerializeCommand(cmd))
			Sleep(1)
			--看到有人喊话，邀请PVP
			for k,_ in pairs(g_others)
			do
				if k~=g_role_id then
					local cmd = NewCommand("PVPInvite")
					cmd.dest_id = k
					API_SendGameProtocol(SerializeCommand(cmd), "R"..k)
					g_others[k] = nil
				end
			end
			Sleep(1)
			--处理已收到的PVP邀请
			for k,_ in pairs(g_pvp_invites)
			do
				local cmd = NewCommand("PVPReply")
				cmd.src_id = k
				cmd.accept = true
				API_SendGameProtocol(SerializeCommand(cmd), "R"..k)
				g_pvp_invites[k] = nil
			end
			Nop()
		end

		API_SendGameProtocol(SerializeCommand(NewCommand("PVPReady")), "P"..g_pvp_id)
		while not g_got_PVPBegin do Nop() end

		API_FastSess_Reset()

		while Nop()
		do
			local now = API_GetTime()
			if now>=g_pvp_fight_start_time then break end
		end

		local client_tick = 0
		while true
		do
			client_tick = client_tick+1

			while client_tick-g_received_client_tick_max>10 --网络帧=10*client_tick
			do
				API_Log("waiting...")
				Nop() --卡住等待
			end

			if g_received_client_tick_max >= 1000 then
				break
			end

			local cmd = NewCommand("PVPOperation")
			cmd.client_tick = client_tick
			cmd.op = math.random(0,99)
			API_FastSess_Send(SerializeCommand(cmd), "R"..g_opponent_id, "P"..g_pvp_id)

			Nop()
		end

		API_Log("END: "..g_player1_hash.." "..g_player2_hash)

		local cmd = NewCommand("PVPEnd")
		cmd.result = g_player1_hash-g_player2_hash
		API_SendGameProtocol(SerializeCommand(cmd), "P"..g_pvp_id)
	end
end

