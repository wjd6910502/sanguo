function OnCommand_JieYiReply(player, role, arg, others)
	player:Log("OnCommand_JieYiReply, "..DumpTable(arg).." "..DumpTable(others))
	
	--回复所有者信息 所有的数据回复
	local resp = NewCommand("JieYiReply_Re")	
	
	local jieyi_info = others.jieyi_info._data
	
	--未知参数
	resp.retcode = 3	
	--准备结义的处理方法
	local id = CACHE.Int64()
	id:Set(arg.id)
	if arg.typ == 2 then
		
		local brotherall = {}
		local fit = jieyi_info._compare_jieyi_info:Find(id)
		if fit ~= nil then
			local v = fit
			local bossId = v._boss_info._id:ToStr()
 			local boss_role = arg.roles[bossId]	
			if boss_role == nil then
				--主A不存在 操作错误
				throw()
				return	
			end
			brotherall[#brotherall+1] = boss_role

			local sit = v._brother_info:SeekToBegin()
			local s = sit:GetValue()
			while sit ~= nil do
				local brother_role = arg.roles[s._id.ToStr()]
				if brother_role == nil then		
					--获取不到角色
					throw()
				end
				
				brotherall[#brotherall+1] = brother_role 
				
				sit:Next()
				s = sit:GetValue()
			end	
		end
					
		--如果agreement  0代表同意 1代表不同意
		resp.retcode = arg.agreement	
		resp.id = v._id:ToStr()
		resp.typ = arg.typ 
	
		--给所有人都发一下
		for i = 1, string.len(brotherall) do
			local dest_role = brotherall[i]
			dest_role:SendToClient(SerializeCommand(resp))
		end
		
		--同意
		player:SendToClient(SerializeCommand(resp))
		return
		--这里可能存在的问题，如果这里设置状态，没有给主A发送状态成功，主A会出现没有刷新状态，这里让客户端判断 如果大于一分钟，则刷新一下Getjieyiinfo
	end

	--已经结义的
	if arg.typ == 1 then
				
		local brotherall = {} 	
		local fit = jieyi_info._jieyi_info:Find(id)			
		if fit ~= nil then
			local v = fit
			local bossId = v._boss_info._id
 			local boss_role = arg.roles[bossId:ToStr()]	
			if boss_role == nil then
				--主A不存在 操作错误
				throw()
				return	
			end
			brotherall[#brotherall+1] = boss_role

			local sit = v._brother_info:SeekToBegin()
			local s = sit:GetValue()
			while sit ~= nil do
				local brother_role = arg.roles[s._id:ToStr()]
				if brother_role ~= nil then
					--找不到角色
					throw()			
				end
				
				brotherall[#brotherall+1] = brother_role 
				
				sit:Next()
				s = sit:GetValue()
			end	
		end
								
		--如果agreement  0代表同意 1代表不同意
		resp.retcode = arg.agreement		
		resp.id = v._id:ToStr()
		resp.typ = arg.typ

		--给所有人都发一下
		for i = 1, string.len(brotherall)	do
			local dest_role = brotherall[i]
			dest_role:SendToClient(SerializeCommand(resp))
		end

		--给自己发一个
		player:SendToClient(SerializeCommand(resp))	

	end
		
end
