function OnCommand_TowerOpenBox(player, role, arg, others)
	player:Log("OnCommand_TowerOpenBox, "..DumpTable(arg).." "..DumpTable(others))
	
	local resp = NewCommand("TowerOpenBox_Re")
	if role._roledata._tower_data._cur_layer ~= arg.layer then
		resp.retcode = G_ERRCODE["TOWER_ERROR_LEVEL"]
		player:SendToClient(SerializeCommand(resp))
		return
	end

	local ed = DataPool_Find("elementdata")
	local layer = role._roledata._tower_data._cur_layer
	if role._roledata._tower_data._difficulty == 2 then
		layer = layer + 100 
	end
	local towerstage = ed:FindBy("tower_stage", layer)
	if towerstage == nil then
		resp.retcode = G_ERRCODE["TOWER_ERROR_DATA"]
		player:SendToClient(SerializeCommand(resp))
		return
	end	
	
	if towerstage.stage_category ~= 2 and towerstage.stage_category~= 4 then --4为特殊宝箱
		resp.retcode = G_ERRCODE["TOWER_ERROR_TYPE"]
		player:SendToClient(SerializeCommand(resp))
		return
	end

	--宝箱已经领取
	local box_info = role._roledata._tower_data._box_info:Find(tmp._layer)
	if box_info ~= nil then
		--该层的奖励已经领取
		if box_info._get_flag ~= 0 then
			resp.retcode = G_ERRCODE["TOWER_ERROR_GET_BOX"]
			player:SendToClient(SerializeCommand(resp))
			return
		end
	end

	resp.retcode = G_ERRCODE["SUCCESS"]
	resp.layer = role._roledata._tower_data._cur_layer
	local Reward = DROPITEM_Reward(role, towerstage.drop_id)
	ROLE_AddReward(role, Reward)
	--存储数据
	local tmp = CACHE.TowerBoxInfo()
	tmp._layer = role._roledata._tower_data._cur_layer
	tmp._get_flag = 1
	role._roledata._tower_data._box_info:Insert(tmp._layer, tmp)
	role._roledata._tower_data._cur_layer = role._roledata._tower_data._cur_layer + 1

	local reward_info = {}
	local item_count = table.getn(Reward.item)
	resp.item = {}
	for i = 1, item_count do
		reward_info.tid = Reward.item[i].itemid
		reward_info.count = Reward.item[i].itemnum
		resp.item[#resp.item+1] = reward_info
	end	
	player:SendToClient(SerializeCommand(resp))
end
