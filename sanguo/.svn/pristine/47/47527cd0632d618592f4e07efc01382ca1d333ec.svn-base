
#ifndef __GNET_SYNCNETIMERE_HPP
#define __GNET_SYNCNETIMERE_HPP

#include "localdefs.h"
#include "callid.hxx"
#include "state.hxx"

namespace GNET
{

class SyncNetimeRe : public GNET::Protocol
{
	#include "syncnetimere"

	void Process(Manager *manager, Manager::Session::ID sid)
	{
		//fprintf(stderr,"-----------------Sync NTP------ orignatetime = %ld, receivetime = %ld, transmitime = %ld \n", orignate_time, receive_time, transmit_time );
		//Player *player = PlayerManager::GetInstance().FindByAccount(account);
		//if(!player) return;
		//Thread::Mutex::Scoped keeper(player->_lock);
		//
		//timeval ref_time;
		//gettimeofday(&ref_time, NULL);		
		//int64_t reference_time = ref_time.tv_sec*1000000 + ref_time.tv_usec;					
		//int64_t delay =  (reference_time - orignate_time)  - (transmit_time - receive_time); //网络延时
		//int64_t offset = ((receive_time - orignate_time) + ( transmit_time - reference_time))/2;  //客户端与服务器时间差 	

		//player->NetTime_Estimate(delay,offset);
	}
};

};

#endif
