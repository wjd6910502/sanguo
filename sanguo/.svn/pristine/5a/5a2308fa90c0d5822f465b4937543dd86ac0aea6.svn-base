
#ifndef __GNET_PVPJOIN_HPP
#define __GNET_PVPJOIN_HPP

#include "localdefs.h"
#include "callid.hxx"
#include "state.hxx"

#include "pvpjoinarg"
#include "pvpjoinres"

namespace GNET
{

class PvpJoin : public Rpc
{
#define	RPC_BASECLASS	Rpc
	#include "pvpjoin"
#undef	RPC_BASECLASS

	void Server(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		// PvpJoinArg *arg = (PvpJoinArg *)argument;
		// PvpJoinRes *res = (PvpJoinRes *)result;
	}

	void Client(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		PvpJoinArg *arg = (PvpJoinArg *)argument;
		PvpJoinRes *res = (PvpJoinRes *)result;

		GLog::log(LOG_INFO, "GAMED::Client:PvpJoin, roleid=%ld, retcode=%d", arg->roleid, res->retcode);

		char msg[100];
		snprintf(msg, sizeof(msg), "10011:%d:", res->retcode); //PVPJoinRe
		MessageManager::GetInstance().Put(arg->roleid, arg->roleid, msg, 0);

	}

	void OnTimeout(Rpc::Data *argument)
	{
	}

};

};
#endif
