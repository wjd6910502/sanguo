#include "miscmanager.h"
#include "gamedbclient.hpp"

extern std::map<Octets, Octets> g_save_data_map;
namespace CACHE
{

void MiscManager::BeginTransaction()
{
}

void MiscManager::CommitTransaction()
{
}

void MiscManager::CancelTransaction()
{
}

void MiscManager::Load(Octets &key, Octets &value)
{
	std::string str_key  = std::string((char*)key.begin(),key.size());

	Marshal::OctetsStream os(value);
	int db_version = 0;
	os >> db_version;
	os._dbversion = db_version;

	if(str_key == "mistmanager_hero_comments")
	{
		_hero_comments.unmarshal(os);
	}
}

void MiscManager::Save()
{
	GNET::Marshal::OctetsStream value;
	std::string key_str = "mistmanager_hero_comments";

	int db_version = GameDBClient::GetInstance()->GetDBVersion();
	value << db_version;
	_hero_comments.marshal(value);
	g_save_data_map[Octets(key_str.c_str(), key_str.size())] = value;
}

}
