
#ifndef __GNET_SYNCNETIME_HPP
#define __GNET_SYNCNETIME_HPP

#include "localdefs.h"
#include "callid.hxx"
#include "state.hxx"
#include <sstream>
#include <string>



namespace GNET
{

class SyncNetime : public GNET::Protocol
{
	#include "syncnetime"
	
	void Process(Manager *manager, Manager::Session::ID sid)
	{
		// compute the ntp argument 
		//fprintf(stderr,"----------------------orignate_time = %ld,recieve_time = %ld ,transmit_time = %ld \n", orignatetime, receivetime,transmittime);
		
		struct timeval ref_time;
		gettimeofday(&ref_time, NULL);	
	
		time_t referencetime = ref_time.tv_sec*1000000 + ref_time.tv_usec;		
		//网络延时
		float roundtrip_delay =  (referencetime - orignatetime)  - (transmittime - receivetime);
		//客户端与服务器时间差
		float difftimes2c = ((receivetime - orignatetime) + ( transmittime - referencetime))/2;
		//同步的现在服务器时间		
		time_t servertime = referencetime + difftimes2c;	
		
		//fprintf(stderr,"------------SYNC NTP-------- 网络延时 = %fus, 客户端与服务器同步时间差 = %fus ,同步服务器的系统时间 = %ld \n",roundtrip_delay,difftimes2c,servertime);
	}
};

};

#endif
