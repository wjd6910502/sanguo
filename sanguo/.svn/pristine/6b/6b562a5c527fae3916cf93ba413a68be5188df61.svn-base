function OnCommand_JieYiLastOperate(player, role, arg, others)
	player:Log("OnCommand_JieYiLastOperate, "..DumpTable(arg).." "..DumpTable(others))
	--
	local resp = NewCommand("JieYiOperateInvite_Re")	
	resp.name = arg.name
	resp.roleId = role._roledata._base._id:ToStr() 
	resp.retcode = arg.agreement
	
	local jieyi_info = others.jieyi_info._data
	
	local id = CACHE.Int64()
	id.Set(arg.id)
	
	local fit = {}
	--准备结义的处理方法
	if arg.typ == 2 then
		fit = jieyi_info._compare_jieyi_info:Find(id)
	elseif arg.typ == 1 then
		fit = jieyi_info._jieyi_info:Find(id)	
	else
		throw()
	end
	
	--验证所有状态都是邀请状态
	if next(fit) ~= nil then
		local v = fit
			
		local sit = v._brother_info:SeekToBegin()
		local s = sit:GetValue()
		while s ~= nil do
			if s._accept ~= 1 then
				--这个人没有接受邀请
				return
			end
	
			sit:Next()
			s = sit:GetValue()
		end		
		resp.id = v._id:ToStr()
							
		--如果agreement  0代表同意 1代表不同意
		if arg.agreement == 1 then
			resp.retcode = 1
		elseif arg.agreement == 0 then
			resp.retcode = 0
			--设置状态
			local v = fit
			local sit = v._brother_info:SeekToBegin()  
			local s = sit:GetValue()
			while s ~= nil do
				if s._id:ToStr() == role._roledata._base._id:ToStr() then 
					s._ready = 1 --二次确认完成
				end

				sit:Next()
				s = sit:GetValue()
			end
		else
			return
		end						
	else
		throw()
	end

	--给所有人都发一下
	local brotherall = GetbrotherIds(arg.typ,tmp_id )
	for i = 1, #brotherall	do
		local dest_id = brotherall[i]
		if dest_id == role._roledata._base._id:ToStr() then
			role:SendToClient(SerializeCommand(resp))
		else
			local dest_role = others.role[dest_id]
			dest_role:SendToClient(SerializeCommand(resp))
		end
	end

	if arg.typ == 2 or arg.typ == 1 then
		
		local fit = {}
		if arg.typ == 2 then
			fit = jieyi_info._compare_jieyi_info:Find(id)
		elseif arg.typ == 1 then
			fit = jieyi_info._jieyi_info:Find(id)
		else
			return
		end
		if next(fit) ~= nil then

			local v = fit	
			local sit = v._brother_info:SeekToBegin()
			local s = sit:GetValue()
			while sit ~= nil do
				
				if s._accept ~= 1 or s._ready ~= 1 then
					--这个人没有接受邀请
					return
				end
				
				sit:Next()
				s = sit:GetValue()
			end	
		end
	end
	--如果所有人都确认了 直接给用户发确认的消息

	local brotherall = GetbrotherIds(arg.typ,tmp_id )
	for i = 1, #brotherall	do
		local dest_id = brotherall[i]
		if dest_id == role._roledata._base._id:ToStr() then
			role._roledata._jieyi_info._jieyi_id = role._roledata._jieyi_info._cur_operate_id
			role._roledata._jieyi_info._cur_operate_id = 0
			role._roledata._jieyi_info._cur_operate_typ = 1
		else
			local dest_role = others.role[dest_id]
			dest_role._roledata._jieyi_info._jieyi_id = role._roledata._jieyi_info._cur_operate_id
			dest_role._roledata._jieyi_info._cur_operate_id = 0
			dest_role._roledata._jieyi_info._cur_operate_typ = 1
		end
	end
		
	--则给所有人发结义成功	
	local resp_suc = NewCommand("JieYiResult")
	resp_suc.id = role._roledata._jieyi_info._jieyi_id:ToStr() 
	resp_suc.name = role._roledata._jieyi_info._jieyi_name
	resp_suc.retcode  = 0 --成功 0  失败 1
	
	--给所有人都发一下
	local brotherall = GetbrotherIds(arg.typ,tmp_id )
	for i = 1, #brotherall	do
		local dest_id = brotherall[i]
		if dest_id == role._roledata._base._id:ToStr() then
			role:SendToClient(SerializeCommand(resp))
		else
			local dest_role = others.role[dest_id]
			dest_role:SendToClient(SerializeCommand(resp))
		end
	end

end


function GetbrotherIds(jieyityp,jieyiid)
	
	local brotherall = {} 	
	local fit = jieyi_info._jieyi_info:Find(tmp_id)			
	if fit ~= nil and jieyityp == 1 then
		local v = fit
		local bossId = v._boss_info._id:ToStr()
		if boss_role == "0" then
				--主A不存在 操作错误
			throw()
			return	
		end
		brotherall[#brotherall+1] = bossId 

		local sit = v._brother_info:SeekToBegin()
		local s = sit:GetValue()
		while s ~= nil do
			local bro_id = s._id:ToStr()
			
			brotherall[#brotherall+1] = bro_id 
				
			sit:Next()
			s = sit:GetValue()
		end

	end
	
	local fit = jieyi_info._compare_jieyi_info:Find(jieyiid)
	if fit ~= nil and jieyityp == 2  then
		local v = fit
		local bossId = v._boss_info._id:ToStr()
		if boss_role == "0" then
				--主A不存在 操作错误
			throw()
			return	
		end
		brotherall[#brotherall+1] = bossId 

		local sit = v._brother_info:SeekToBegin()
		local s = sit:GetValue()
		while s ~= nil do
			local bro_id = s._id:ToStr()
			
			brotherall[#brotherall+1] = bro_id 
				
			sit:Next()
			s = sit:GetValue()
		end	
	end

	return brotherall
end

