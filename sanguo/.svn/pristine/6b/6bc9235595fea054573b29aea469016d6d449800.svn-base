function OnCommand_ChallengeRoleByItem(player, role, arg, others)
	player:Log("OnCommand_ChallengeRoleByItem, "..DumpTable(arg).." "..DumpTable(others))
	
	local resp = NewCommand("ChallengeRoleByItem_Re")
	
	local dest_role = others.roles[arg.roleid]

	--查看你自己的信息没有任何的意义呀
	if role._roledata._base._id:ToStr() == dest_role._roledata._base._id:ToStr() then
		return 
	end

	resp.retcode = G_ERRCODE["SUCCESS"]
	resp.role_info = {}
	
	resp.role_info.id = dest_role._roledata._base._id:ToStr()
	resp.role_info.name = dest_role._roledata._base._name
	resp.role_info.level = dest_role._roledata._status._level
	resp.role_info.score = dest_role._roledata._pve_arena_info._score
	resp.role_info.hero_score = 100
	resp.role_info.mafia_name = dest_role._roledata._mafia._name
	resp.role_info.rank = 0
	resp.role_info.hero_info = {}
	resp.role_info.hero_info.heroinfo = {}
	
	role._roledata._pve_arena_info._cur_attack_player._id = ""
	role._roledata._pve_arena_info._cur_attack_player._name = ""
	role._roledata._pve_arena_info._cur_attack_player._hero_info:Clear()
	
	local heroid_it = dest_role._roledata._pve_arena_info._defence_hero_info:SeekToBegin()
	local heroid = heroid_it:GetValue()
	while heroid ~= nil do
		local hero_info = dest_role._roledata._hero_hall._heros:Find(heroid._value)
		if hero_info ~= nil then
			local tmp_hero = {}
			local insert_hero = CACHE.PveArenaHeroInfo()
			
			tmp_hero.id = heroid._value
			tmp_hero.level = hero_info._level
			tmp_hero.star = hero_info._star
			tmp_hero.grade = hero_info._order
			
			insert_hero._heroid = heroid._value
			insert_hero._level = hero_info._level
			insert_hero._star = hero_info._star
			insert_hero._grade = hero_info._order
			
			tmp_hero.skill = {}
			tmp_hero.common_skill = {}
			tmp_hero.select_skill = {}
			
			local skills = hero_info._skill
			local sit = skills:SeekToBegin()
			local s = sit:GetValue()
			while s ~= nil do
				local h3_skill = CACHE.HeroSkill()
				h3_skill._skill_id = s._skill_id
				h3_skill._skill_level = s._skill_level
				insert_hero._skill:PushBack(h3_skill)
				
				local h3 = {}
				h3.skill_id = s._skill_id
				h3.skill_level = s._skill_level
				tmp_hero.skill[#tmp_hero.skill+1] = h3
			
				sit:Next()
				s = sit:GetValue()
			end
		
			local common_skills = hero_info._common_skill
			local com_it = common_skills:SeekToBegin()
			local com = com_it:GetValue()
			while com ~= nil do
				local h3_skill = CACHE.HeroSkill()
				h3_skill._skill_id = com._skill_id
				h3_skill._skill_level = com._skill_level
				insert_hero._common_skill:PushBack(h3_skill)
				
				local h3 = {}
				h3.skill_id = com._skill_id
				h3.skill_level = com._skill_level
				tmp_hero.common_skill[#tmp_hero.common_skill+1] = h3
				
				com_it:Next()
				com = com_it:GetValue()
			end
		
			local select_skills = hero_info._select_skill
			local select_skill_it = select_skills:SeekToBegin()
			local select_skill = select_skill_it:GetValue()
			while select_skill ~= nil do
				local h3_skill = CACHE.Int()
				h3_skill._value = select_skill._value
				insert_hero._select_skill:PushBack(h3_skill)
				
				tmp_hero.select_skill[#tmp_hero.select_skill+1] = select_skill._value
				
				select_skill_it:Next()
				select_skill = select_skill_it:GetValue()
			end
			
			resp.role_info.hero_info.heroinfo[#resp.role_info.hero_info.heroinfo+1] = tmp_hero
			
			role._roledata._pve_arena_info._cur_attack_player._hero_info:PushBack(insert_hero)
		end
		
		heroid_it:Next()
		heroid = heroid_it:GetValue()
	end
	
	role._roledata._pve_arena_info._cur_attack_player._id = resp.role_info.id
	role._roledata._pve_arena_info._cur_attack_player._name = resp.role_info.name

	role:SendToClient(SerializeCommand(resp))
end
