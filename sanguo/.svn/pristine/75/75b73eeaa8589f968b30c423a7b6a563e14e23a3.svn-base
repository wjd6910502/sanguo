
#include "statusserver.hpp"
#include "state.hxx"
#include "serverstatus.hpp"
#include "glog.h"

namespace GNET
{

StatusServer StatusServer::instance;

unsigned char text_utf8[] = {
  0xe6, 0xb8, 0xb8, 0xe6, 0x88, 0x8f, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1,
  0xe5, 0x99, 0xa8, 0xe5, 0xb0, 0x9a, 0xe6, 0x9c, 0xaa, 0xe5, 0xbc, 0x80,
  0xe6, 0x94, 0xbe, 0xef, 0xbc, 0x8c, 0xe8, 0xaf, 0xb7, 0xe5, 0x85, 0xb3,
  0xe6, 0xb3, 0xa8, 0xe5, 0xae, 0x98, 0xe7, 0xbd, 0x91, 0xe5, 0xbc, 0x80,
  0xe6, 0x9c, 0x8d, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe3, 0x80, 0x82,
  0x0a
};
unsigned int text_utf8_len = 61;

const Protocol::Manager::Session::State* StatusServer::GetInitState() const
{
	return &state_StatusServer;
}

void StatusServer::OnAddSession(Session::ID sid)
{
	GLog::log(LOG_INFO, "StatusServer::OnAddSession, sid=%u", sid);
	
	ServerStatus prot;
	prot.info = Octets(text_utf8, text_utf8_len);
	Send(sid, prot);
}

void StatusServer::OnDelSession(Session::ID sid)
{
	GLog::log(LOG_INFO, "StatusServer::OnDelSession, sid=%u", sid);
}

};
