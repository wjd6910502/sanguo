	public:
		int64_t roleid;
		int zoneid;
		Octets video_id;
		enum { PROTOCOL_TYPE = PROTOCOL_GETPVPVIDEO };
	public:
		GetPvpVideo() { type = PROTOCOL_GETPVPVIDEO; }
		GetPvpVideo(void*) : Protocol(PROTOCOL_GETPVPVIDEO) { }
		GetPvpVideo (const int64_t& l_roleid,const int& l_zoneid,const Octets& l_video_id)
			 : roleid(l_roleid),zoneid(l_zoneid),video_id(l_video_id)
		{
			type = PROTOCOL_GETPVPVIDEO;
		}

		GetPvpVideo(const GetPvpVideo &rhs)
			: Protocol(rhs),roleid(rhs.roleid),zoneid(rhs.zoneid),video_id(rhs.video_id) { }

		GNET::Protocol *Clone() const { return new GetPvpVideo(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << zoneid;
			os << video_id;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> zoneid;
			os >> video_id;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 1024; }
