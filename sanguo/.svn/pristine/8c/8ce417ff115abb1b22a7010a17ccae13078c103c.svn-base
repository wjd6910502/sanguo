	public:
		Octets info;
		enum { PROTOCOL_TYPE = PROTOCOL_SERVERSTATUS };
	public:
		ServerStatus() { type = PROTOCOL_SERVERSTATUS; }
		ServerStatus(void*) : Protocol(PROTOCOL_SERVERSTATUS) { }
		ServerStatus (const Octets& l_info)
			 : info(l_info)
		{
			type = PROTOCOL_SERVERSTATUS;
		}

		ServerStatus(const ServerStatus &rhs)
			: Protocol(rhs),info(rhs.info) { }

		GNET::Protocol *Clone() const { return new ServerStatus(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << info;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> info;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 1024; }
