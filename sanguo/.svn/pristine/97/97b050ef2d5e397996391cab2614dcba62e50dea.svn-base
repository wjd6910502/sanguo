#ifndef __GNET_DBSAVETASK_H
#define __GNET_DBSAVETASK_H

#include "thread.h"
#include "dbsavedata.hrp"
#include "topmanager.h"
#include "message.h"

using namespace GNET;

namespace CACHE
{
	class DelayDBSaveDataTask : public Thread::Runnable
	{
	public:
		static DelayDBSaveDataTask * GetInstance()
		{
			static DelayDBSaveDataTask instance;
			return &instance;
		}
		DelayDBSaveDataTask(): Runnable(1){ }

		void Run()
		{
			//在这里发送一个消息，来进行数据的开始存储。
		
			GLog::log(LOG_INFO, "dbSavedata begin ... ...");

			char msg[100];
			snprintf(msg, sizeof(msg), "10006:");
			MessageManager::GetInstance().Put(0, 0, msg, 0);

			Thread::HouseKeeper::AddTimerTask(this, 60);
		};
	};
};

#endif

