function OnCommand_WuZheShiLianFinishBattle(player, role, arg, others)
	player:Log("OnCommand_WuZheShiLianFinishBattle, "..DumpTable(arg).." "..DumpTable(others))
		
	local resp = NewCommand("WuZheShiLianFinishBattle_Re")
	resp.retcode = G_ERRCODE["SUCCESS"]
	local hero_trial = role._roledata._wuzhe_shilian 
	
	--验证是否当前的难度关卡
	local curdifficulty = arg.difficulty
	local curstage = arg.stage
	if curdifficulty ~= hero_trial._cur_difficulty then
		--当前难度不正确
		resp.retcode = G_ERRCODE["TRIAL_ACTIVE_PARAM_DIFFICULTY_WRONG"] 
		player:SendToClient(SerializeCommand(resp))
		return
	end
	if hero_trial._cur_stage ~= curstage then
		--关卡没有开启
		resp.retcode = G_ERRCODE["TRIAL_ACTIVE_PARAM_STAGE_WRONG"]
		player:SendToClient(SerializeCommand(resp))
		return
	end	
	

	for i = 1, table.getn(arg.hero) do
		local hero = arg.hero[i]
		--判断是否在英雄列表中
		local f = role._roledata._hero_hall._heros:Find(hero.id)
		if f == nil then	
			--武将不存在
			resp.restcode = G_ERRCODE["TRIAL_ACTIVE_PARAM_HERO_NOT_EXIST"]
			player:SendToClient(SerializeCommand(resp))
			return
		end		
		local s = hero_trial._dead_hero_info:Find(hero.id)
		if s ~= nil then
			--死亡英雄不可以上阵
			resp.retcode = G_ERRCODE["TRIAL_ACTIVE_PARAM_HERO_DEAD"]
			player:SendToClient(SerializeCommand(resp))
			return
		end	
	
		--关卡结束英雄数据修改
		local f = hero_trial._injured_hero_info:Find(hero.id)
		if f ~= nil then
			f._hp = hero.hp
			f._anger = hero.anger
			if f._hp == 0 then
				--插入死亡数据 删除受伤数据
				hero_trial._injured_hero_info:Delete(hero.id)
		 		
				local deadhero = CACHE.Int:new()
				deadhero._value = hero.id
				hero_trial._dead_hero_info:Insert(hero.id,deadhero)
			end
		else
			local trialhero = CACHE.ShiLianHeroInfo:new()
			trialhero._id  = hero.id
			trialhero._hp  = hero.hp
			trialhero._anger  = hero.anger
			hero_trial._injured_hero_info:Insert(hero.id,trialhero)
		end
	end
	
	
	--关卡挑战成功	
	if arg.opponent.hp == 0 and arg.winflag == 1 then
		
		--计算最大通关难度
		if hero_trial._high_difficulty < 5 and hero_trial._cur_stage == 8 then
			--当前关卡难度都已经完成
			if hero_trial._cur_difficulty > hero_trial._high_difficulty then
				hero_trial._high_difficulty = hero_trial._cur_difficulty
			end
	
			hero_trial._cur_difficulty = hero_trial._cur_difficulty + 1
			if hero_trial._cur_difficulty > 5 then
				hero_trial._cur_difficulty = 5
			end
		end
	
		-- 设置当前关卡
		local trialdifficultyinfo  = hero_trial._attack_info:Find(curdifficulty)			
		if trialdifficultyinfo ~= nil then
			local trialstageinfo = trialdifficultyinfo._difficulty_attackinfo:Find(arg.opponent.id)
			if trialstageinfo ~= nil then
				trialstageinfo._alive_flag = 0 	
				trialstageinfo._hp = 0
				trialstageinfo._anger = 0				
			end		
		end
		 
	else
	
		local trialdifficultyinfo  = hero_trial._attack_info:Find(curdifficulty)			
		if trialdifficultyinfo ~= nil then
			local trialstageinfo = trialdifficultyinfo._difficulty_attackinfo:Find(arg.opponent.id)
			if trialstageinfo ~= nil then
				trialstageinfo._alive_flag = 1 
				trialstageinfo._hp = arg.opponent.hp
				trialstageinfo._anger = arg.opponent.anger				
			end
		end
		resp.retcode = G_ERRCODE["TRIAL_ACTIVE_FAILED"] 
		player:SendToClient(SerializeCommand(resp))
		return
	end
	
	--返回奖励数据
	local ed = DataPool_Find("elementdata")
	local stageinfo = ed:FindBy("trialstage_id", arg.stage) 
	
	resp.item = {}
	player:Log("OnCommand_WuZheShiLianFinishBattle, ".."111111111111111111111111111") 	
	if stageinfo ~= nil then
		-- 固定奖励 + 随即奖励 + 宿主英雄奖励
		local Reward = DROPITEM_Reward(role, stageinfo.reward_id)
		ROLE_AddReward(role, Reward)
			
		for i =1 , #Reward.item do
			local tmp_item = Reward.item[i]
			resp.item[#resp.item +1] = tmp_item				
		end
		
		player:Log("OnCommand_WuZheShiLianFinishBattle, ".."111111111111111111111111111".."="..stageinfo.drop_id) 
		local ditem = DROPITEM_DropItem(role, stageinfo.drop_id)
		
		player:Log("OnCommand_WuZheShiLianFinishBattle, ".."drop_size = "..#ditem.."id = "..ditem[1].id.."num = "..ditem[1].count)
		if #ditem >= 1 then
			for i = 1, #ditem do
				local tmp_item  = ditem[i]	
				if tmp_item ~= nil then
					BACKPACK_AddItem(role,tmp_item.id,tmp_item.count) 
					resp.item[#resp.item +1] = tmp_item
				end
			end
		end
			
		player:Log("OnCommand_WuZheShiLianFinishBattle, ".."222222222222222222222222222") 
		--获取宿主英雄的奖励
		local suzhuwujiangreward = {}
		suzhuwujiangreward[#suzhuwujiangreward+1] = stageinfo.speical_reward_id1
		suzhuwujiangreward[#suzhuwujiangreward+1] = stageinfo.speical_reward_id2
		suzhuwujiangreward[#suzhuwujiangreward+1] = stageinfo.speical_reward_id3
	end		
	--获取宿主英雄
	local ed = DataPool_Find("elementdata")
	local boss_infos = ed.FindBy("boss_id", arg.opponent.id)
	if boss_infos ~= nil then
		local num_id = {}
	
		num_id[#num_id+1] = boss_infos.sudi_role1
		num_id[#num_id+1] = boss_infos.sudi_role2 
		num_id[#num_id+1] = boss_infos.sudi_role3
			
		--添加宿主武将奖励
		for i =1,#num_id do
			for i = 1 ,#arg.hero  do
				local hero_info = arg.hero[i]
				if  hero_info.id == num_id[i] then
					local Reward = DROPITEM_Reward(role, suzhuwujiangreward[i])
					ROLE_AddReward(role, Reward)		
				
					--添加物品
					for i =1 , #Reward.item do 
						local tmp_item = Reward.item[i]
						resp.item[#resp.item +1] = tmp_item				
					end			
				end
			end
		end
	end

	player:SendToClient(SerializeCommand(resp))
	
end
