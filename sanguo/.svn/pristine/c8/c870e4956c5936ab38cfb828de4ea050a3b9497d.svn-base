
#ifndef __GNET_GMCMD_MAILITEMTOPLAYER_HPP
#define __GNET_GMCMD_MAILITEMTOPLAYER_HPP

#include <sstream>
#include "localdefs.h"
#include "callid.hxx"
#include "state.hxx"


namespace GNET
{

class GMCmd_MailItemToPlayer : public GNET::Protocol
{
	#include "gmcmd_mailitemtoplayer"

	void Process(Manager *manager, Manager::Session::ID sid)
	{
		GLog::log(LOG_INFO, "gamed::GMCmd_MailItemToPlayer::Process, playerid=%ld, itemid=%.*s, itemnum=%.*s, mailtitle=%.*s, mailcontent=%.*s, session_id=%d", 
				playerid, (int)itemid.size(), (char*)itemid.begin(), (int)itemnum.size(), (char*)itemnum.begin(), (int)mailtitle.size(), (char*)mailtitle.begin(), (int)mailcontent.size(), (char*)mailcontent.begin(), session_id);

		GMCmd_MailItemToPlayer_Re resp;

		const Player *player = PlayerManager::GetInstance().FindByRoleId(playerid);
		if(!player)
		{
			GLog::log(LOG_INFO, "gamed::GMCmd_MailItemToPlayer::Process, Failure, playerid=%ld, session_id=%d, player not found", 
				playerid, session_id);

			//TODO: noload player
			resp.retcode = -1;
			resp.session_id = session_id;
			const char *desc = "player not found";
			resp.desc = Octets(desc, strlen(desc));
			manager->Send(sid, resp);
			return;
		}

		std::string items = std::string((char*)itemid.begin(), itemid.size());
		std::string msgitem = "";
		if(atoi((char*)itemnum.begin())>0)
		{
			std::string num = std::string((char*)itemnum.begin(), itemnum.size());
			msgitem += "1:"+items+":"+num;
		}
		else if(atoi((char*)itemnum.begin())==-1)
		{
			if(items[items.size()-1]!='@')
			{
				items += "@";
			}
			int locate = 0;
			locate = items.find("@");
			int num = 0;
			while(locate!=-1)
			{
				std::string tmp_id = items.substr(0, locate);
				msgitem += ":"+tmp_id+":";

				items = items.substr(locate+1, items.size());
				locate = items.find("@");
				std::string tmp_num = items.substr(0, locate);
				msgitem += tmp_num;

				num += 1;
				items = items.substr(locate+1, items.size());
				locate = items.find("@");
			}
			std::stringstream ss;
			ss << num;
			msgitem = ss.str()+msgitem;
		}
		else
		{
			msgitem = "0";
		}
		
		char *title = new char[mailtitle.size()*2];
		base64_encode((unsigned char*)mailtitle.begin(), mailtitle.size(), title);

		char *content = new char[mailcontent.size()*2];
		base64_encode((unsigned char*)mailcontent.begin(), mailcontent.size(), content);


		char msg[100];
		snprintf(msg, sizeof(msg), "11001:%s:%s:%s:%d:%u:",
				msgitem.c_str(), title, content, session_id, sid);
		MessageManager::GetInstance().Put(playerid, playerid, msg, 0);
		delete title;
		delete content;
	}
};

};

#endif
