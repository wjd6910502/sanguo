
#ifndef __GNET_CREATEROLENAME_HPP
#define __GNET_CREATEROLENAME_HPP

#include "localdefs.h"
#include "callid.hxx"
#include "state.hxx"

#include "createrolenamearg"
#include "createrolenameres"

namespace GNET
{

class CreateRoleName : public Rpc
{
#define	RPC_BASECLASS	Rpc
	#include "createrolename"
#undef	RPC_BASECLASS

	void Server(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		// CreateRoleNameArg *arg = (CreateRoleNameArg *)argument;
		// CreateRoleNameRes *res = (CreateRoleNameRes *)result;
	}

	void Client(Rpc::Data *argument, Rpc::Data *result, Manager *manager, Manager::Session::ID sid)
	{
		CreateRoleNameArg *arg = (CreateRoleNameArg *)argument;
		CreateRoleNameRes *res = (CreateRoleNameRes *)result;

		if(res->retcode == 0)
		{
			//成功创建角色
			PlayerManager::GetInstance().CreateRoleName(arg->account, arg->name, arg->photo);
		}
		else
		{
			//直接给客户端发送错误的消息
			Player *player = PlayerManager::GetInstance().FindByAccount(arg->account);
			player->SendToClient(std::string((char*)arg->errorinfo.begin(),arg->errorinfo.size()));
		}
	}

	void OnTimeout(Rpc::Data *argument)
	{
	}

};

};
#endif
