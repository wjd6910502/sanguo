function OnCommand_TowerGetInfo(player, role, arg, others)
	player:Log("OnCommand_TowerGetInfo, "..DumpTable(arg).." "..DumpTable(others))

	local resp = NewCommand("TowerGetInfo_Re")
	resp.difficulty = role._roledata._tower_data._difficulty
	resp.cur_layer = role._roledata._tower_data._cur_layer
	resp.all_star = role._roledata._tower_data._all_star
    resp.cur_star = role._roledata._tower_data._cur_star
    resp.sweep_layer = role._roledata._tower_data._history_layer

	local buff_it = role._roledata._tower_data._buff:SeekToBegin()
	local buff = buff_it:GetValue()
	while buff ~= nil do
		resp.buff[#resp.buff + 1] = buff._value
		buff_it:Next()
		buff = buff_it:GetValue()
	end

    resp.dead_hero = role._roledata._tower_data._dead_hero

	local dead_it = role._roledata._tower_data._dead_hero:SeekToBegin()
	local dead = dead_it:GetValue()
	while dead ~= nil do
		resp.dead_hero[#resp.dead_hero + 1] = dead._value
		dead_it:Next()
		dead = dead_it:GetValue()
	end	

	local injured_it = role._roledata._tower_data._injured_hero:SeekToBegin()
	local injured = injured_it:GetValue()
	while injured ~= nil do
		local data = {}
		data.id = injured._id
		data.hp = injured._hp
		data.anger = injured._anger
		resp.injured_hero[#resp.injured_hero + 1] = data
		injured_it:Next()
		injured = injured_it:GetValue()
	end
	
	player:SendToClient(SerializeCommand(resp))
end
