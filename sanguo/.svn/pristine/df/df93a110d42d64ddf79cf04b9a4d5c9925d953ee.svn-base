function OnCommand_WuZheShiLianFinishBattle(player, role, arg, others)
	player:Log("OnCommand_WuZheShiLianFinishBattle, "..DumpTable(arg).." "..DumpTable(others))
		
	local resp = NewCommand("WuZheShiLianFinishBattle_Re")
	resp.retcode = G_ERRCODE["SUCCESS"]
	local hero_trial = role._roledata._wuzhe_shilian 
	
	--验证是否当前的难度关卡
	local curdifficulty = arg.difficulty
	local curstage = arg.stage
	if curdifficulty ~= hero_trial._cur_difficulty then
		--当前难度不正确
		resp.retcode = G_ERRCODE["TRIAL_ACTIVE_PARAM_DIFFICULTY_WRONG"] 
		player:SendToClient(SerializeCommand(resp))
		return
	end
	if hero_trial._cur_stage ~= curstage then
		--关卡没有开启
		resp.retcode = G_ERRCODE["TRIAL_ACTIVE_PARAM_STAGE_WRONG"]
		player:SendToClient(SerializeCommand(resp))
		return
	end	
	for hero in DataPool_Array(arg.heros) do
		--判断是否在英雄列表中
		local f = role._roledata._hero_hall._heros:Find(hero.id)
		if f == nil then	
			--武将不存在
			resp.restcode = G_ERRCODE["TRIAL_ACTIVE_PARAM_HERO_NOT_EXIST"]
			player:SendToClient(SerializeCommand(resp))
			return
		end
		
		local s = hero_trial.dead_hero:Find(hero.id)
		if s ~= nil then
			--死亡英雄不可以上阵
			resp.retcode = G_ERRCODE["TRIAL_ACTIVE_PARAM_HERO_DEAD"]
			player:SendToClient(SerializeCommand(resp))
			return
		end	
	end

	-- 关卡结束英雄数据修改
	for heroinfo in DataPool_Array(arg.hero) do
		local f = hero_trial._injured_hero_info:Find(heroinfo.id)
		if f ~= nil then
			f._hp = heroinfo.hp
			f._anger = heroinfo.anger
			if f._hp == 0 then
				--插入死亡数据 删除受伤数据
				hero_trial._injured_hero_info:Delete(heroinfo.id)
				local deadhero = Cache.Int()
				deadhero._value = heroinfo.id
				hero_trial._dead_hero_info:Insert(heroinfo.id,deadhero)
			end
		end
	end
	
	--关卡挑战成功	
	if arg.opponent.hp == 0 and arg.win_flags == 0  then
		--没有通关
		if hero_trial._high_difficulty ~= 5 then
			hero_trial._cur_stage = hero_trial._cur_stage + 1
			if hero_trial._cur_stage > 8 then	
				hero_trial._cur_stage = 1
				hero_trial._cur_difficulty = hero_trial._cur_difficulty + 1
				hero_trial._high_difficulty = hero_trial._cur_difficulty
				if hero_trial._cur_difficulty > 5 then
					--如果通关了 设置 当前关卡为9 需要告诉客户端
					hero_trial._cur_difficulty = 5
					hero_trial._cur_stage = 9
					hero_trial._high_difficulty = 5
				end
			end
		end
		-- 设置设置当前关卡状态
		local trialdifficultyinfo  = hero_trial._attack_info:Find(arg.difficulty)			
		if trialdifficultyinfo ~= nil then
			local trialstageinfo = trialdifficultyinfo._difficulty_attackinfo:Find(arg.opponent.id)
			if trialstageinfo ~= nil then
				trialstageinfo._alive_flag = 0 	
				trialstageinfo._hp = 0
				trialstageinfo._anger = 0				
			end		
		end
	else
		local trialdifficultyinfo  = hero_trial._attack_info:Find(difficulty)			
		if trialdifficultyinfo ~= nil then
			local trialstageinfo = trialdifficultyinfo._difficulty_attackinfo:Find(arg.opponent.id)
			if trialstageinfo ~= nil then
				trialstageinfo._alive_flag = 1 
				trialstageinfo._hp = arg.opponent.hp
				trialstageinfo._anger = arg.opponent.anger				
			end
		end
		resp.retcode = G_ERRCODE["TRIAL_ACTIVE_FAILED"] 
		player:SendToClient(SerializeCommand(resp))
		return
	end

	--返回奖励数据
	local ed = DataPool_Find("elementdata")
	local stage_infos = ed.shilianstage
	local num_id = {}

	local suzhuwujiangreward = {}

	for stage in DataPool_Array(stage_infos) do
		if stage.stage_diff == difficulty and stage.stage_id == stage then	
			
			-- 固定奖励 + 随即奖励 + 宿主英雄奖励
			local Reward = DROPITEM_Reward(role, stage.reward_id)
			ROLE_AddReward(role, Reward)
			
			for tmp_item in DataPool_Array(Reward.item) do
				resp.item[#resp.item +1] = tmp_item				
			end
			
			local ditem = DROPITEM_DropItem(role, stage.drop_id)
			for tmp_item in DataPool_Array(ditem) do				
				BACKPACK_AddItem(role,tmp_item.id,tmp_item.num) 
				resp.item[#resp.item +1] = tmp_item
			end
			
			--获取宿主英雄的奖励
			suzhuwujiangreward[#suzhuwujiangreward+1] = stage.speical_reward_id1
			suzhuwujiangreward[#suzhuwujiangreward+1] = stage.speical_reward_id2
			suzhuwujiangreward[#suzhuwujiangreward+1] = stage.speical_reward_id3
			break
		end

	end
	
	--获取宿主英雄
	local ed = DataPool_Find("elementdata")
	local boss_infos = ed.shilianboss
	local num_id = {}
	for boss in DataPool_Array(boss_infos) do
		if boss.id == arg.opponent.id then
			num_id[#num_id+1] = boss.sudi_role1
			num_id[#num_id+1] = boss.sudi_role2 
			num_id[#num_id+1] = boss.sudi_role3
			break
		end
	end	
		
	--添加宿主武将奖励
	for i =1,#num_id do
		for hero_info in DataPool_Array(arg.hero) do
			if  hero_info.id == num_id[i] then
				local Reward = DROPITEM_Reward(role, suzhuwujiangreward[i])
				ROLE_AddReward(role, Reward)		
				
				--添加物品
				for tmp_item in DataPool_Array(Reward.item) do
					resp.item[#resp.item +1] = tmp_item				
				end			
			end
		end
	end
		
	player:SendToClient(SerializeCommand(resp))
	
end
