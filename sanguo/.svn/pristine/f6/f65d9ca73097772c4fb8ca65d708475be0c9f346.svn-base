function OnCommand_JieYiReply(player, role, arg, others)
	player:Log("OnCommand_JieYiReply, "..DumpTable(arg).." "..DumpTable(others))
	
	--回复所有者信息 所有的数据回复
	local resp = NewCommand("JieYiReply_Re")	
	
	local jieyi_info = others.jieyi_info._data
	
	local tmp_id = CACHE.Int64()
	tmp_id:Set(arg.id)

	--提前处理一下加人操作
	local roleinfo = CACHE.CompareJieYiRoleInfo()
	roleinfo._id = role._roledata._base._id
	roleinfo._level = role._roledata._status._level
	roleinfo._name = role._roledata._base._name
	roleinfo._photo = role._roledata._base._photo
	roleinfo._accept = 0
	roleinfo._ready = 0
	roleinfo._time = API_GetTime()

	if arg.typ == 1 then
		local info = jieyi_info._jieyi_info:Find(tmp_id)
		if info ~= nil then
			
			--结义兄弟判断是否存在 不存在加入 不存在不处理
			local sit = info._brother_info:SeekToBegin()
			s = sit:GetValue()
			
			-- 这里0代表未找到  1代表找到
			local isfind = 0
			while s ~= nil do
				if s._id == roleinfo._id then
					isfind = 1					
				end
				sit:Next()
				s = sit:GetValue()
			end
			
			if isfind == 0 and arg.agreement == 1 then
	   			info._brother_info:PushBack( roleinfo )
			end

			resp.id = info._id:ToStr()
		else
			
			throw()
		end
		--这里考虑要不要到底放在俩个列表里面 因为里面状态可以区分这些东西
	elseif arg.typ == 2 then
		local info = jieyi_info._compare_jieyi_info:Find(tmp_id) 
		if info ~= nil then
			
			resp.id = info._id:ToStr()
			--结义兄弟判断是否存在 不存在加入 不存在不处理
			local sit = info._brother_info:SeekToBegin()
			s = sit:GetValue()
			
			-- 这里0代表未找到  1代表找到
			local isfind = 0
			while s ~= nil do
				if s._id:ToStr() == roleinfo._id:ToStr() then
					isfind = 1		
					break
				end
				
				sit:Next()
				s = sit:GetValue()
			end
			
			if isfind == 0 and arg.agreement == 1 then
	   			info._brother_info:PushBack( roleinfo )
			end

			resp.id = info._id:ToStr()
		else
			throw()
		end
	else
		local cmd = NewCommand("ErrorInfo") 
		cmd.error_id = G_ERRCODE["JIEYI_INVITEROLE_NOT_CREATED"]
		role:SendToClient(SerializeCommand(cmd)) 
		return
	end
		
	resp.retcode = arg.agreement		
	resp.typ = arg.typ
	resp.role_id = role._roledata._base._id:ToStr()

	--给所有人都发一下
	local brotherall = GetbrotherIds(arg.typ,tmp_id )
	for i = 1, #brotherall	do
		local dest_id = brotherall[i]
		if dest_id == role._roledata._base._id:ToStr() then
			role:SendToClient(SerializeCommand(resp))
		else
			local dest_role = others.role[dest_id]
			dest_role:SendToClient(SerializeCommand(resp))
		end
	end
		
end

function GetbrotherIds(jieyityp,jieyiid)
	
	local brotherall = {} 	
	local fit = jieyi_info._jieyi_info:Find(tmp_id)			
	if fit ~= nil and jieyityp == 1 then
		local v = fit
		local bossId = v._boss_info._id:ToStr()
		if boss_role == "0" then
				--主A不存在 操作错误
			throw()
			return	
		end
		brotherall[#brotherall+1] = bossId 

		local sit = v._brother_info:SeekToBegin()
		local s = sit:GetValue()
		while s ~= nil do
			local bro_id = s._id:ToStr()
			
			brotherall[#brotherall+1] = bro_id 
				
			sit:Next()
			s = sit:GetValue()
		end

	end
	
	local fit = jieyi_info._compare_jieyi_info:Find(jieyiid)
	if fit ~= nil and jieyityp == 2  then
		local v = fit
		local bossId = v._boss_info._id:ToStr()
		if boss_role == "0" then
				--主A不存在 操作错误
			throw()
			return	
		end
		brotherall[#brotherall+1] = bossId 

		local sit = v._brother_info:SeekToBegin()
		local s = sit:GetValue()
		while s ~= nil do
			local bro_id = s._id:ToStr()
			
			brotherall[#brotherall+1] = bro_id 
				
			sit:Next()
			s = sit:GetValue()
		end	
	end

	return brotherall
end

