function OnCommand_PvpJoin(player, role, arg, others)
	player:Log("OnCommand_PvpJoin, "..DumpTable(arg).." "..DumpTable(others))

	--检查PVP版本
	local cur_pvp_ver = ROLE_GetPVPVersion(role._roledata._client_ver._client_id, role._roledata._client_ver._exe_ver, role._roledata._client_ver._data_ver)
	if cur_pvp_ver <= 0 then
		local resp = NewCommand("ErrorInfo")
		resp.error_id = G_ERRCODE["EXE_OUT_OF_DATE"]
		player:SendToClient(SerializeCommand(resp))
		player:Log("OnCommand_PvpJoin, ".."error ="..G_ERRCODE["EXE_OUT_OF_DATE"])
		return
	end

	role._roledata._client_ver._pvp_ver = cur_pvp_ver

	--检查当前玩家的状态是否可以进行PVP
	if role._roledata._pvp._id ~= 0 or role._roledata._pvp._state ~= 0 then
		player:Log("OnCommand_PvpJoin, "..role._roledata._pvp._id.."  ".."  "..role._roledata._pvp._state)
		return
	end

	if role._roledata._device_info._net_type < 2 then
		local resp = NewCommand("ErrorInfo")
		resp.error_id = G_ERRCODE["PVP_NET_TYPE_ERR"]
		player:SendToClient(SerializeCommand(resp))
		player:Log("OnCommand_PvpJoin, ".."error ="..G_ERRCODE["PVP_NET_TYPE_ERR"])
		return
	end

	--在这里不进行任何的验证。直接就把消息发给中心服务器去
	if role._roledata._pvp_info._last_hero:Size() == 0 then
		local resp = NewCommand("ErrorInfo")
		resp.error_id = G_ERRCODE["PVP_HERO_COUNT_ERR"]
		player:SendToClient(SerializeCommand(resp))
		player:Log("OnCommand_PvpJoin, ".."error ="..G_ERRCODE["PVP_HERO_COUNT_ERR"])
		return
	end

	local latency = player:GetLatency()
	local udp_latency = player:GetUDPLatency()
	player:Log("OnCommand_PvpJoin, latency="..latency..", udp_latency="..udp_latency)
	if latency<0 or udp_latency<0 then
		--设置当前进入了PVP状态
		role._roledata._pvp._state = 1
		role._roledata._status._instance_id = 0
		--采样数据太少，无法确定延迟
		role._roledata._status._pvp_join_flag = 1
		local resp = NewCommand("PvpJoin_Re")
		resp.retcode = 0
		resp.time = role._roledata._pvp_info._pvp_time
		player:SendToClient(SerializeCommand(resp))
		return
		--local resp = NewCommand("ErrorInfo")
		--resp.error_id = G_ERRCODE["PVP_LATENCY_ING"]
		--player:SendToClient(SerializeCommand(resp))
		--return
	elseif latency<300 or udp_latency<140 then
		--还行，进
	else
		--网络太差，直接放弃
		local resp = NewCommand("ErrorInfo")
		resp.error_id = G_ERRCODE["PVP_LATENCY_LARGE"]
		player:SendToClient(SerializeCommand(resp))
		player:Log("OnCommand_PvpJoin, ".."error ="..G_ERRCODE["PVP_LATENCY_LARGE"])
		return
	end
	
	--设置当前进入了PVP状态
	role._roledata._pvp._state = 1
	role._roledata._status._instance_id = 0
	ROLE_PVPJoin(player, role)
end
